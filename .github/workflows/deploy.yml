name: Deploy to GitHub Pages

on:
  workflow_dispatch:
  push:
    branches:
      - master

permissions:
  id-token: write
  pages: write
  contents: read

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    name: Build Site
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Define Package Manager
        id: define-package-manager
        run: |
          echo "manager=yarn" >> $GITHUB_OUTPUT
          echo "command=install" >> $GITHUB_OUTPUT
          echo "runner=yarn" >> $GITHUB_OUTPUT

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ steps.define-package-manager.outputs.manager }}

      - name: Setup NextJS Config
        run: |
          sed -i -e "s|// ||g" ./next.config.mjs
          sed -i -e "s|##BASE_PATH##|${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}|g" ./next.config.mjs

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.define-package-manager.outputs.manager }} ${{ steps.define-package-manager.outputs.command }}

      - name: Build with Next.js
        run: ${{ steps.define-package-manager.outputs.runner }} next build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    name: Deploy Site
    runs-on: ubuntu-latest
    needs: build

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
